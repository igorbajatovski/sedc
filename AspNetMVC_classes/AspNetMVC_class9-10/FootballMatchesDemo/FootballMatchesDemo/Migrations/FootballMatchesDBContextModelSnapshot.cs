// <auto-generated />
using FootballMatchesDemo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FootballMatchesDemo.Migrations
{
    [DbContext(typeof(FootballMatchesDBContext))]
    partial class FootballMatchesDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FootballMatchesDemo.Models.Match", b =>
                {
                    b.Property<int>("HomeTeamID");

                    b.Property<int>("GuestTeamID");

                    b.Property<int>("Score");

                    b.HasKey("HomeTeamID", "GuestTeamID");

                    b.HasIndex("GuestTeamID");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("FootballMatchesDemo.Models.Player", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<int>("TeamID");

                    b.HasKey("ID");

                    b.HasIndex("TeamID");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("FootballMatchesDemo.Models.Team", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("FootballMatchesDemo.Models.Trainer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<int>("TeamID");

                    b.HasKey("ID");

                    b.HasIndex("TeamID")
                        .IsUnique();

                    b.ToTable("Trainers");
                });

            modelBuilder.Entity("FootballMatchesDemo.Models.Match", b =>
                {
                    b.HasOne("FootballMatchesDemo.Models.Team", "GuestTeam")
                        .WithMany("GuestMatches")
                        .HasForeignKey("GuestTeamID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FootballMatchesDemo.Models.Team", "HomeTeam")
                        .WithMany("HomeMatches")
                        .HasForeignKey("HomeTeamID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FootballMatchesDemo.Models.Player", b =>
                {
                    b.HasOne("FootballMatchesDemo.Models.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FootballMatchesDemo.Models.Trainer", b =>
                {
                    b.HasOne("FootballMatchesDemo.Models.Team", "Team")
                        .WithOne("Trainer")
                        .HasForeignKey("FootballMatchesDemo.Models.Trainer", "TeamID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
